#include <iostream>
#include<vector>
#include<stdlib.h>
using namespace std;

/*
只需要用一个一位数组来存放当前皇后的状态。假设数组为int state[n], state[i]表示第 i 行皇后所在的列。那么在新的一行 k 放置一个皇后后:

    判断列是否冲突，只需要看state数组中state[0…k-1] 是否有和state[k]相等；
    判断对角线是否冲突：如果两个皇后在同一对角线，那么|row1-row2| = |column1 - column2|，（row1，column1），（row2，column2）分别为冲突的两个皇后的位置

*/
int N,ans;


bool isVaild(vector<int> &state, int row,int col)
{
    for(int i=0; i<row; i++)
        if(state[i]==col || abs(i-row)==abs(state[i]-col))
            return false;
    return true;
}

void helper(vector<int> &state, int row)
{

    for(int col=0; col<N; col++)
    {
        if(isVaild(state,row,col))
        {

            if(row==(N-1))
            {
                ans++;
            }
            else
            {
                state[row]=col;
                helper(state,row+1);
                state[row]=-1;
            }

        }
    }
}



int main()
{
    cin >> N;
    vector<int> state(N, -1);
    ans=0;
    helper(state,0);
    cout << ans << endl;
    return 0;
}
